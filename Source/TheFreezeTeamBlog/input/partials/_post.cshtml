@model IDocument

@{
  IReadOnlyList<string> tags = Model.GetList<string>("Tags");
  IEnumerable<IDocument> tagsToDisplay =
    tags
      ?.Select
      (
        x =>
          Outputs["tags.html"]
          .First()
          .GetChildren()
          .FirstOrDefault
          (
            y =>
              y.GetTitle()
              .Equals(x, StringComparison.OrdinalIgnoreCase)
          )
      )
      .Where(x => x != null).Take(3);

  string excerpt = Model.GetString(Statiq.Html.HtmlKeys.Excerpt);
  string image = Model.GetString(WebKeys.Image);
  string postImageUrl = Model.GetString(TftKeys.PostImageUrl);
  string readTime = @Model.GetString(TftKeys.ReadTime);
  string authorName = Model.GetString(WebKeys.Author);
  string authorLink = Context.GetLink(authorName.Replace(" ", "-").ToLower());
  authorLink = $"/author/{authorLink}";
  string authorImage = Model.GetString(TftKeys.AuthorImage);
}

<div class="flex flex-col flex-grow flex-shrink w-full p-6 transition duration-500 ease-in-out transform md:w-1/3 hover:-translate-y-1 hover:scale-105">
  <div class="flex-1 overflow-hidden bg-white rounded-t rounded-b-none shadow-lg">
    <a href="@Context.GetLink(Model)" class="flex flex-wrap no-underline hover:no-underline">
      @if (postImageUrl != null)
      {
        <img src="@postImageUrl" class="object-cover w-full h-64 rounded-t">
      }

      @if (tagsToDisplay != null )
      {
        @foreach(IDocument tag in tagsToDisplay)
        {
          <p class="px-6 py-1 mt-2 ml-2 text-xs font-semibold text-gray-800 bg-gray-100 rounded md:text-sm">@tag.GetTitle()</p>
        }
      }
      <div class="w-full px-6 pt-4 text-xl font-bold text-gray-900">@Model.GetString(WebKeys.Title)</div>
      <p class="px-6 pt-1 mb-5 text-base text-gray-800">
        @excerpt
      </p>
    </a>
  </div>
  @if (!string.IsNullOrEmpty(authorName))
  {
    <div class="flex-none p-6 mt-auto overflow-hidden bg-white rounded-t-none rounded-b shadow-lg">
      <div class="flex items-center justify-between">
        <p class='tooltip'>
          <a href="/author/@Context.GetLink(Model.GetString(WebKeys.Author).Replace(" ","-").ToLower())"><img src="@Model.GetString("AuthorImage")" class="object-cover w-8 h-8 rounded-full"></a> <span class='p-3 -mt-16 -ml-4 text-sm text-gray-100 bg-black rounded tooltip-text'>@Model.GetString("Author")</span>
        </p>
        <p class="text-xs font-bold text-gray-300  lg:text-xs">@readTime</p>
      </div>
    </div>
  }
</div>
