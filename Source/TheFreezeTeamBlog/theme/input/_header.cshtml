@model IDocument
@{
  string backgroundImage = null;
  string title = null;
  bool isHomePageHeader = false;
  if (Document.ContainsKey(WebKeys.Image))
  {
    backgroundImage = $"background-image: url(\"/images{Context.GetLink(Document.GetString(WebKeys.Image))}\"); height: 80vh;";
    title = Document.GetString("Title") ?? Document.GetString("SiteTitle");
  }
  if (!Document.ContainsKey(WebKeys.Image))
  {
    isHomePageHeader = true;
    backgroundImage = $"";
    title = Document.GetString("Title") ?? Document.GetString("SiteTitle");
  }
  string description = Document.WithoutSettings().GetString("Lead") ?? Document.WithoutSettings().GetString(WebKeys.Description);
  bool isPost = Document.GetBool("IsPost") && title != "Tags" && title != "Archive";
}


  @Html.Partial("_postNav")
  <div class="text-center mx-auto pt-16 md:pt-10 w-7/12">
    <p class="text-sm text-blue-500 font-medium uppercase">
      @Model.GetDateTime(WebKeys.Published).ToLongDateString() <span class="text-gray-900">/</span>
      @if (Document.ContainsKey("Tags"))
      {
        @foreach (IDocument tag in Document.GetList<string>("Tags")
        .Select(x => Outputs["tags.html"]
        .First()
        .GetChildren()
        .FirstOrDefault(y => y.GetTitle().Equals(x, StringComparison.OrdinalIgnoreCase)))
        .Where(x => x != null))
        {
          <a href="@Context.GetLink(tag)"> @tag.GetTitle()</a>
        }
      }
    </p>
    <h1 class="font-bold break-normal text-3xl md:text-5xl">@title</h1>
  </div>
  <!--image-->
  <div class="container w-full max-w-7xl mx-auto bg-white lg:bg-cover mt-8 lg:rounded lg:h-4 h-2 bg-cover bg-center bg-no-repeat" style="@backgroundImage"></div>



