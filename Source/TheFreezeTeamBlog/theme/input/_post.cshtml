@model IDocument

@{
  string excerpt = Model.GetString(Statiq.Html.HtmlKeys.Excerpt);
  string imageUrl = "/images/" + Model.GetString(WebKeys.Image);
  int readTime = excerpt.Length / 80;
}

<a href="@Context.GetLink(Model)" class="flex flex-wrap no-underline hover:no-underline">
  <div class="w-full md:w-1/3 transform transition duration-500 ease-in-out hover:-translate-y-1 hover:scale-105 p-6 flex flex-col flex-grow flex-shrink">
    <div class="flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow-lg ">
      @if (imageUrl != "/images/")
      {
        <img src="@imageUrl" class="h-64 w-full rounded-t object-cover">
      }
    <p class="w-full text-gray-600 text-xs md:text-sm px-6">
      @*@Model.GetDateTime(WebKeys.Published).ToLongDateString()*@
      @if (Document.ContainsKey("Tags"))
      {
        @foreach (IDocument tag in Document.GetList<string>("Tags")
        .Select(x => Outputs["tags.html"]
        .First()
        .GetChildren()
        .FirstOrDefault(y => y.GetTitle().Equals(x, StringComparison.OrdinalIgnoreCase)))
        .Where(x => x != null))
        {
          <a href="@Context.GetLink(tag)"> @tag.GetTitle()</a>
        }
      }
    </p>
      <div class="w-full font-bold text-xl text-gray-900 px-6 pt-4">@Html.DocumentLink(Model)</div>
      <p class="text-gray-800 text-base px-6 pt-1 mb-5">@excerpt</p>
    </div>
    <div class="flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow-lg p-6">
      <div class="flex items-center justify-between">

        <img src="@Model.GetString("AuthorImage")" class="h-8 w-8 rounded-full object-cover object-cover">
        <p class=" text-xs lg:text-xs font-bold text-gray-300">@readTime MIN READ</p>
      </div>
    </div>
  </div>
</a>
