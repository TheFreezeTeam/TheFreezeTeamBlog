@model IDocument

@{
  string excerpt = Model.GetString(Statiq.Html.HtmlKeys.Excerpt);
  string imageUrl = "/images/" + Model.GetString(WebKeys.Image);
  int readTime = excerpt.Length / 50;
}

  <div class="w-full md:w-1/3 transform transition duration-500 ease-in-out hover:-translate-y-1 hover:scale-105 p-6 flex flex-col flex-grow flex-shrink">
    <div class="flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow-lg">
      <a href="@Context.GetLink(Model)" class="flex flex-wrap no-underline hover:no-underline">
         @if (imageUrl != "/images/")
          {
            <img src="@imageUrl" class="h-64 w-full rounded-t object-cover">
          }

        @if (Model.ContainsKey("Tags"))
              {
                  @foreach (IDocument tag in Model.GetList<string>("Tags")
                    .Select(x => Outputs["tags.html"].First().GetChildren().FirstOrDefault(y => y.GetTitle().Equals(x, StringComparison.OrdinalIgnoreCase)))
                    .Where(x => x != null).Take(1))
                  {
                     <p class="text-gray-800 font-semibold bg-gray-100 py-1 rounded text-xs md:text-sm mt-2 ml-2 px-6">@tag.GetTitle()</p>
                  }
              }
        <div class="w-full font-bold text-xl text-gray-900 px-6 pt-4">@Model.GetString(WebKeys.Title)</div>
        <p class="text-gray-800 text-base px-6 pt-1 mb-5">
          @excerpt
        </p>
      </a>
    </div>
    <div class="flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow-lg p-6">
      <div class="flex items-center justify-between">
        <p class='tooltip'>
          <a href="/author/@Context.GetLink(Model.GetString(WebKeys.Author).Replace(" ","-").ToLower())"><img src="@Model.GetString("AuthorImage")" class="h-8 w-8 rounded-full object-cover object-cover"></a> <span class='tooltip-text bg-black text-gray-100 text-sm p-3 -mt-16 -ml-4 rounded'>@Model.GetString("Author")</span>
        </p>
        @if(readTime == 0)
        {
          <p class=" text-xs lg:text-xs font-bold text-gray-300">QUICK READ</p>
        }else
        {
          <p class=" text-xs lg:text-xs font-bold text-gray-300">@readTime MIN READ</p>
        }
      </div>
    </div>
  </div>

